name: Deploy to EC2

on:
  push:
    branches: [ "develop" ]
  pull_request:
    types:
      - closed
    branches:
      - develop

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: sportify
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USERNAME: ubuntu

jobs:
  deploy:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Build Docker image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }}:${{ github.sha }} .
        docker tag ${{ env.ECR_REPOSITORY }}:${{ github.sha }} ${{ env.ECR_REPOSITORY }}:latest

    # 배포를 위한 파일 준비
    - name: Prepare deployment files
      run: |
        mkdir -p deploy
        cp docker-compose.yml deploy/
        echo "${{ secrets.ENV_FILE }}" > deploy/.env

    # SSH 키 설정
    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-add ~/.ssh/deploy_key

    # SCP로 파일 전송
    - name: Copy files to EC2
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key -r deploy/* ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }}:/home/${{ env.EC2_USERNAME }}/sportify/

    # SSH로 배포 실행
    - name: Deploy to EC2
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }} '
          cd /home/${{ env.EC2_USERNAME }}/sportify &&
          docker-compose pull &&
          docker-compose up -d
        '